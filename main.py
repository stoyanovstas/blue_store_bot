import logging
from aiogram import Bot, Dispatcher, executor, types
from google_client import GoogleClient
import os
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_IDS = os.getenv("ADMIN_IDS").split(",")
SHEET_ID = os.getenv("SHEET_ID")
JSON_KEYFILE = os.getenv("GOOGLE_KEYFILE")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

gc = GoogleClient(JSON_KEYFILE, SHEET_ID)

@dp.message_handler(commands=["start"])
async def start(msg: types.Message):
    telegram_id = str(msg.from_user.id)
    name = msg.from_user.full_name

    user = gc.find_user(telegram_id)
    if user:
        await msg.answer(f"üëã –ü—Ä–∏–≤–µ—Ç, {name}! –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
    else:
        gc.register_user(telegram_id, name)
        await msg.answer(f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Blue Store, {name}! üéâ\n–¢–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω.")

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å", "üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤")
    keyboard.add("üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", "üßæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–Ω—É—Å—ã")
    await msg.answer("–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", reply_markup=keyboard)

@dp.message_handler(lambda msg: msg.text == "üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å")
async def show_balance(msg: types.Message):
    telegram_id = str(msg.from_user.id)
    user = gc.find_user(telegram_id)
    if user:
        balance = user.get("–ë–∞–ª–∞–Ω—Å Blue Coins", "0")
        await msg.answer(f"üí∞ –£ —Ç–µ–±—è {balance} blue coins.")
    else:
        await msg.answer("–¢—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /start")

@dp.message_handler(lambda msg: msg.text == "üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤")
async def history(msg: types.Message):
    await msg.answer("üïì –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!")

@dp.message_handler(lambda msg: msg.text == "üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞")
async def refer(msg: types.Message):
    await msg.answer("üîó –ü–æ–¥–µ–ª–∏—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π: t.me/YourBotUsername?start=" + str(msg.from_user.id))

@dp.message_handler(lambda msg: msg.text == "üßæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–Ω—É—Å—ã")
async def use_bonus(msg: types.Message):
    await msg.answer("‚ö†Ô∏è –°–ø–∏—Å–∞–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)